package net.rujel.stats;

import java.lang.reflect.Method;
import java.util.Enumeration;

import net.rujel.interfaces.EduCourse;
import net.rujel.reusables.Various;

import com.webobjects.appserver.*;
import com.webobjects.eocontrol.EOEditingContext;
import com.webobjects.eocontrol.EOEnterpriseObject;
import com.webobjects.foundation.*;

// Generated by the WOLips Templateengine Plug-in at Jun 1, 2009 1:13:34 PM
public class StatsPlugin extends com.webobjects.appserver.WOComponent {
	
	public EduCourse course;
	public NSMutableArray rows;
	public Object item;
	public int cols =1;
	public Integer index;
	
    public StatsPlugin(WOContext context) {
        super(context);
    }
    
//	public void appendToResponse(WOResponse aResponse, WOContext aContext) {
    public void setCourse(EduCourse aCourse) {
    	course = aCourse;
		NSKeyValueCodingAdditions readAccess = (NSKeyValueCodingAdditions)
			session().valueForKey("readAccess");
		NSArray reports = (NSArray)session().valueForKeyPath("modules.statCourseReport");
		if(reports == null || reports.count() == 0)
			return;
		EOEditingContext ec = course.editingContext();
		Enumeration enu = reports.objectEnumerator();
		rows = new NSMutableArray();
		NSArray currKeys = null;
		cols = 0;
		Object currDesc = null;
		while (enu.hasMoreElements()) {
			NSDictionary cfg = (NSDictionary) enu.nextElement();
			String entName = (String)cfg.valueForKey("entName");
			if(Various.boolForObject(readAccess.valueForKeyPath("_read." + entName)))
				continue;
			String statField = (String)cfg.valueForKey("statField");
			EOEnterpriseObject param1 = (EOEnterpriseObject)cfg.valueForKey("param1");
			EOEnterpriseObject param2 =(EOEnterpriseObject) cfg.valueForKey("param2");
			if(param2 == null && param1 != null) {
				param2 = course;
			}
			if(param1 == null) {
				param1 = course;
			}
			boolean create = (Boolean)readAccess.valueForKeyPath("create.Stats");
			NSDictionary dict = null;
			Grouping grouping = Description.getGrouping(entName, 
					statField, param1, param2,create);
			Object desc = null;
			if((grouping == null || ec.globalIDForObject(grouping).isTemporary())) {
				Method ifEmpty = (Method)cfg.valueForKey("ifEmpty");
				if(ifEmpty != null);
				dict = StatsModule._execIfEmpty(ifEmpty, grouping, create, 
						param1, param2, ec, entName, statField);
				desc = Description.getDescription(entName, statField, 
						entForParam(param1), entForParam(param2), ec, create);
				if(desc == null)
					desc = entName + "_" + statField;
			} else {
				dict = grouping.dict();
				desc = grouping.description();
			}
			if(!desc.equals(currDesc)) {
				currDesc = desc;
				NSArray keys = (NSArray)cfg.valueForKey("keys");
				if(keys == null && (desc instanceof Description))
					keys = (NSArray)NSKeyValueCodingAdditions.Utility.
										valueForKeyPath(desc, "borderSet.sortedTitles");
				if(keys == null)
					keys = new NSArray("");
				if(!keys.contains(""))
					keys = keys.arrayByAddingObject("");
				currKeys = keys;
				if(keys.count() > cols)
					cols = keys.count() +2;
				NSMutableDictionary rowDict = new NSMutableDictionary("grey","styleClass");
				rowDict.takeValueForKey("font-weight:bold;", "style");
				if(desc instanceof Description)
					rowDict.takeValueForKey(((Description)desc).description(), "title");
				else
					rowDict.takeValueForKey(entName, "title");
				rowDict.takeValueForKey(application().valueForKeyPath(
						"strings.RujelStats_Stats.total"), "total");
				rowDict.takeValueForKey(keys.objects(),"values");
				rows.addObject(rowDict);
			}
			NSMutableDictionary rowDict = new NSMutableDictionary("gerade","styleClass");
			rowDict.takeValueForKey(cfg.valueForKey("title"), "title");
			Object[] row = new Object[currKeys.count()];
			if(grouping != null) {
				rowDict.takeValueForKey(grouping.total(), "total");
			}
			Enumeration kEnu = dict.keyEnumerator();
			while (kEnu.hasMoreElements()) {
				Object key = kEnu.nextElement();
				if(key.equals("keys") && (dict.objectForKey(key) instanceof NSArray))
					continue;
				int idx = currKeys.indexOf(key);
				if(idx >= 0) {
//					rowDict.setObjectForKey(dict.objectForKey(key), key);
					row[idx] = dict.objectForKey(key);
					continue;
				}
				if(key.equals("total")) {
					Number total = (Number)dict.objectForKey("total");
					if(grouping == null) {
						rowDict.takeValueForKey(total, "total");
						continue;
					} else if(total.equals(grouping.total())) {
						continue;
					}
				}
				StringBuffer others = (StringBuffer)rowDict.objectForKey("others");
					//row[keys.count() + 2];
				if(others == null) {
					others = new StringBuffer();
//					row[keys.count() + 1] = others;
					rowDict.setObjectForKey(others, "others");
					if(cols < row.length + 3)
						cols = row.length + 3;
				} else {
					others.append(" ; ");
				}
				others.append('\'').append(key).append('\'');
				others.append(':').append(dict.objectForKey(key));
			} // process keys
			rowDict.takeValueForKey(row, "values");
//			rowDict.takeValueForKey(new Integer(row.length), "valuesCount");
			rows.addObject(rowDict);
		} // process reports
	}
    
	private static String entForParam(Object param) {
		if(param == null)
			return EduCourse.entityName;
		if(param instanceof EOEnterpriseObject)
			return ((EOEnterpriseObject)param).entityName();
		return param.toString();
	}
	
    public boolean titleRow() {
    	return ("grey".equals(((NSDictionary)item).valueForKey("styleClass")));
    }
    
    public int count() {
//    	if(titleRow()) {
//    		return ((NSArray)item).count();
//    	} else 
    	if(item instanceof NSDictionary) {
			Object[] row = (Object[])((NSDictionary)item).valueForKey("values");
			return row.length;
		}
    	return 0;
    }
    
    public String lastCell() {
    	int num = 2 + count();
    	boolean titleRow = titleRow();
    	if(num >= cols)
    		return null;
    	StringBuilder buf = new StringBuilder(12);
    		buf.append((titleRow)?"<th":"<td");
    	if(cols > num +1)
    		buf.append("colspan = \"").append(cols - num).append('"');
//    	if(titleRow)
//    		buf.append(" style = \"");
    	buf.append('>');
    	if(titleRow) {
    		buf.append(application().valueForKeyPath("strings.RujelStats_Stats.others"));
    	} else {
    		Object val = ((NSDictionary)item).valueForKey("others");
    		if(val != null)
    			buf.append(val);
    	}
    	buf.append((titleRow)?"</th>":"</td>");
    	return buf.toString();
    }
	
	public String value() {
		if(item == null || index == null)
			return null;
		int idx = index.intValue();
		if(item instanceof NSDictionary) {
			Object[] row = (Object[])((NSDictionary)item).valueForKey("values");
			if(idx >= row.length)
				return null;
			if(row[idx] == null)
				return "<td></td>";
			String val = row[idx].toString();
			if(!titleRow())
				return "<td>" + row[idx].toString() + "</td>";
			StringBuilder result = new StringBuilder("<th style = \"");
			boolean quote = (val.length() < 3);
			if(quote) {
				result.append("min-width:1.6em;\"");
			} else {
				result.append("white-space:nowrap;\"");
			}
			if(val.equals("")) {
				val = (String)application().valueForKeyPath("strings.RujelStats_Stats.none");
				if(val != null)
					result.append(" title = \"").append(val).append('"');
				val = "&oslash;";
				quote = false;
			} else {
				val = WOMessage.stringByEscapingHTMLString(val.toString());
			}
			result.append('>');
			if(quote) result.append('\'');
			result.append(val);
			if(quote) result.append('\'');
			result.append("</th>");
			return result.toString();
		}
		return null;
	}
}