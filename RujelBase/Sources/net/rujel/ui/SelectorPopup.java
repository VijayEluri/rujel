// SelectorPopup.java: Class file for WO Component 'SelectorPopup'

/*
 * Copyright (c) 2008, Gennady & Michael Kushnir
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 * 
 * 	•	Redistributions of source code must retain the above copyright notice, this
 * 		list of conditions and the following disclaimer.
 * 	•	Redistributions in binary form must reproduce the above copyright notice,
 * 		this list of conditions and the following disclaimer in the documentation
 * 		and/or other materials provided with the distribution.
 * 	•	Neither the name of the RUJEL nor the names of its contributors may be used
 * 		to endorse or promote products derived from this software without specific 
 * 		prior written permission.
 * 		
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
 * SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
 * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
 * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
 * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

package net.rujel.ui;

import net.rujel.reusables.Various;

import com.webobjects.appserver.*;
import com.webobjects.foundation.NSKeyValueCodingAdditions;

// Generated by the WOLips Templateengine Plug-in at Mar 23, 2009 1:30:45 PM
public class SelectorPopup extends com.webobjects.appserver.WOComponent {
    
	public WOComponent returnPage;
	public Object value;
	public NSKeyValueCodingAdditions dict;
	public String resultPath;
	public Object resultGetter;
	public String title;
	
	public SelectorPopup(WOContext context) {
        super(context);
    }
	
	public void appendToResponse(WOResponse aResponse, WOContext aContext) {
		if(title == null && dict != null)
			title = (String)dict.valueForKey("title");
		super.appendToResponse(aResponse, aContext);
	}
	
	public WOActionResults invokeAction(WORequest aRequest, WOContext aContext) {
		if(!Various.boolForObject(dict.valueForKey("invokeAction")))
			dict.takeValueForKey(Boolean.TRUE, "invokeAction");
		WOActionResults result = super.invokeAction(aRequest, aContext);
		if(result == null || result == returnPage) {
			result = returnAction();
		} else {
			;
		}
		return result;
	}
	
	public WOActionResults returnAction() {
		returnPage.ensureAwakeInContext(context());
		if(resultGetter == null)
			returnPage.takeValueForKeyPath(value, resultPath);
		else
			NSKeyValueCodingAdditions.Utility.takeValueForKeyPath(
					resultGetter, value, resultPath);
		return returnPage;
	}
	
	public void cancel() {
		value = null;
	}

	public String onCancel() {
		String set = (String)dict.valueForKey("onCancel");
		if(set == null)
			return "closePopup();";
		if(set.equals("ajaxPopup")) {
			 return "ajaxPopupAction('" + context().componentActionURL() + "');";
		}
		if(set.indexOf('(') < 0)
			return (String)session().valueForKey(set);
		return set;
	}
	
}