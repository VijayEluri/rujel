package net.rujel.ui;

import java.text.Format;
import java.text.ParseException;

import net.rujel.base.MyUtility;
import net.rujel.reusables.StringStorage;
import net.rujel.reusables.Various;

import com.webobjects.appserver.*;
import com.webobjects.foundation.NSArray;
import com.webobjects.foundation.NSDictionary;
import com.webobjects.foundation.NSKeyValueCoding;
import com.webobjects.foundation.NSMutableArray;

// Generated by the WOLips Templateengine Plug-in at Feb 20, 2009 2:04:55 PM
public class PeriodSelector extends com.webobjects.appserver.WOComponent {
    public String begin;
    public String end;
    protected final Format df = MyUtility.dateFormat();

    public static final NSDictionary ANY = new NSDictionary (
    		StringStorage.appStringStorage.valueForKeyPath("RujelBase_Base.noLimit"),"title");
	
	//public NSArray periods;
	public NSKeyValueCoding period;
    public NSKeyValueCoding perItem;
	
	public PeriodSelector(WOContext context) {
        super(context);
    }
	
	public NSArray periods() {
		NSArray periods = (NSArray)session().valueForKeyPath("modules.periods");
		if(Various.boolForObject(valueForBinding("allowNone"))) {
			if(periods instanceof NSMutableArray)
				((NSMutableArray) periods).addObject(ANY);
			else
				periods = periods.arrayByAddingObject(ANY);
		}
		return periods;
	}
	
	public void setFromPeriod(boolean setBegin, boolean setEnd) {
		if(period == null)
			return;
		if (setBegin)
			begin = (period==ANY)?null:df.format(period.valueForKey("begin"));
		if (setEnd)
			end = (period==ANY)?null:df.format(period.valueForKey("end"));
	}
	
    public void appendToResponse(WOResponse aResponse, WOContext aContext) {
    	//periods = (NSArray)session().valueForKeyPath("modules.periods");
    	Object tmp = valueForBinding("begin");
    	begin = (tmp == null)?null:df.format(tmp);
    	tmp = valueForBinding("end");
    	end = (tmp == null)?null:df.format(tmp);
    	period = (NSKeyValueCoding)valueForBinding("period");
    	if(period != null) {
    		setFromPeriod(begin == null, end == null);
    	}
    	super.appendToResponse(aResponse, aContext);
    }

    public void takeValuesFromRequest(WORequest aRequest, WOContext aContext) {
    	//periods = (NSArray)session().valueForKeyPath("modules.periods");
    	if(!aContext.senderID().startsWith(aContext.elementID() + '.'))
    		return;
    	super.takeValuesFromRequest(aRequest, aContext);
    	if(hasBinding("period")) {
    		setValueForBinding((period==ANY)?null:period, "period");
    	}
    	if (period != null) {
			boolean setBegin = hasBinding("begin");
			if(setBegin && begin != null && valueForBinding("begin") != null)
				setBegin = begin.equals(df.format(valueForBinding("begin")));
			boolean setEnd = hasBinding("end");
			if(setEnd && end != null && valueForBinding("end") != null)
				setEnd = end.equals(df.format(valueForBinding("end")));
			setFromPeriod(setBegin, setEnd);
		}
		if(canSetValueForBinding("begin")) {
			if(begin == null) {
				setValueForBinding(null, "begin");
			} else {
				try {
					setValueForBinding(df.parseObject(begin), "begin");
				} catch (ParseException e) {
					;
				}
			}
		}
    	if(canSetValueForBinding("end")) {
			if(end == null) {
				setValueForBinding(null, "end");
			} else {
				try {
					setValueForBinding(df.parseObject(end), "end");
				} catch (ParseException e) {
					;
				}
			}
		}
     }

    public WOActionResults submit() {
    	WOActionResults result = (WOActionResults)valueForBinding("selectAction");
    	return result;
    }
    
	public void reset() {
		begin = null;
		end = null;
		period = null;
		super.reset();
	}
	
	public boolean isStateless() {
		return true;
	}
	
	public boolean synchronizesVariablesWithBindings() {
        return false;
	}
}