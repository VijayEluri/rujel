package net.rujel.ui;

import net.rujel.reusables.Period;

import com.webobjects.appserver.*;
import com.webobjects.foundation.NSTimestamp;

// Generated by the WOLips Templateengine Plug-in at Feb 20, 2009 2:04:55 PM
public class PeriodSelector extends com.webobjects.appserver.WOComponent {
    public NSTimestamp begin;
    public NSTimestamp end;
	
	//public NSArray periods;
	public Period period;
    public Period perItem;
	
	public PeriodSelector(WOContext context) {
        super(context);
    }
	
	public void setFromPeriod(boolean setBegin, boolean setEnd) {
		if(period == null)
			return;
		java.util.Date date = period.begin();
		if (setBegin) {
			if (date instanceof NSTimestamp) {
				begin = (NSTimestamp) date;
			} else {
				begin = new NSTimestamp(date);
			}
		}
		if (setEnd) {
			date = period.end();
			if (date instanceof NSTimestamp) {
				end = (NSTimestamp) date;
			} else {
				end = new NSTimestamp(date);
			}
		}
	}
	
    public void appendToResponse(WOResponse aResponse, WOContext aContext) {
    	//periods = (NSArray)session().valueForKeyPath("modules.periods");
    	begin = (NSTimestamp)valueForBinding("begin");
    	end = (NSTimestamp)valueForBinding("end");
    	period = (Period)valueForBinding("period");
    	if(period != null) {
    		setFromPeriod(begin == null, end == null);
    	}
    	super.appendToResponse(aResponse, aContext);
    }

    public void takeValuesFromRequest(WORequest aRequest, WOContext aContext) {
    	//periods = (NSArray)session().valueForKeyPath("modules.periods");
    	super.takeValuesFromRequest(aRequest, aContext);
    	if(hasBinding("period")) {
    		setValueForBinding(period, "period");
    	}
    	if (period != null) {
			boolean setBegin = (hasBinding("begin") && (begin == null || begin
					.equals(valueForBinding("begin"))));
			boolean setEnd = (hasBinding("end") && (end == null || end
					.equals(valueForBinding("end"))));
			setFromPeriod(setBegin, setEnd);
		}
		if(hasBinding("begin"))
    		setValueForBinding(begin, "begin");
    	if(hasBinding("end"))
    		setValueForBinding(end, "end");
     }

    public WOActionResults submit() {
    	WOActionResults result = (WOActionResults)valueForBinding("selectAction");
    	return result;
    }
    
	public void reset() {
		super.reset();
	}
	
	public boolean isStateless() {
		return true;
	}
	
	public boolean synchronizesVariablesWithBindings() {
        return false;
	}
}