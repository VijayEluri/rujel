// PersonDisplay.java

/*
 * Copyright (c) 2008, Gennady & Michael Kushnir
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 * 
 * 	•	Redistributions of source code must retain the above copyright notice, this
 * 		list of conditions and the following disclaimer.
 * 	•	Redistributions in binary form must reproduce the above copyright notice,
 * 		this list of conditions and the following disclaimer in the documentation
 * 		and/or other materials provided with the distribution.
 * 	•	Neither the name of the RUJEL nor the names of its contributors may be used
 * 		to endorse or promote products derived from this software without specific 
 * 		prior written permission.
 * 		
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
 * SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
 * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
 * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
 * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

package net.rujel.ui;

import java.text.Format;

import net.rujel.base.MyUtility;
import net.rujel.interfaces.Person;
import net.rujel.interfaces.PersonLink;

import com.webobjects.appserver.*;

// Generated by the WOLips Templateengine Plug-in at Feb 2, 2009 1:16:54 PM
public class PersonDisplay extends com.webobjects.appserver.WOComponent {
    public PersonDisplay(WOContext context) {
        super(context);
    }
    
    @SuppressWarnings("deprecation")
	public void appendToResponse(WOResponse aResponse, WOContext aContext) {
    	Object tmp = valueForBinding("person");
    	if(tmp == null) {
    		aResponse.appendContentString("?");
    		return;
    	}
       	Person person = null;
    	if(tmp instanceof Person) {
    		person = (Person)tmp;
    	} else if (tmp instanceof PersonLink) {
    		person = ((PersonLink)tmp).person();
    	} else {
    		aResponse.appendContentString("!???!");
    	}
    	boolean startWithLast = true;
    	tmp = valueForBinding("startWithLast");
    	if(tmp != null) {
    		if(tmp instanceof Boolean) {
    			startWithLast = ((Boolean)tmp).booleanValue();
    		} else if (tmp instanceof Number) {
    			startWithLast = (((Number)tmp).intValue() != 0);
    		}
    	}
    	
    	if(startWithLast) {
        	tmp = valueForBinding("last");
        	if(tmp == null)
        		tmp = new Integer(3);
        	appendName(aResponse, person.lastName(), tmp, true);
    	}
    	tmp = valueForBinding("first");
    	appendName(aResponse, person.firstName(), tmp, true);
    	tmp = valueForBinding("second");
    	appendName(aResponse, person.secondName(), tmp, !startWithLast);
       	if(!startWithLast) {
        	tmp = valueForBinding("last");
        	if(tmp == null)
        		tmp = new Integer(3);
        	appendName(aResponse, person.lastName(), tmp, false);
    	}
       	
    	tmp = valueForBinding("birthdayFormat");
    	if(tmp != null) {
    		aResponse.appendContentCharacter(' ');
    		Format format = null;
    		if(tmp instanceof Format) {
    			format = (Format)tmp;
    		} else if (tmp instanceof String) {
    			format = new com.webobjects.foundation.NSTimestampFormatter((String)tmp);
    		}
    		if(format == null)
    			format = MyUtility.dateFormat();
    		aResponse.appendContentString(format.format(person.birthDate()));
    	}      	
     }
    
    protected void appendName(WOResponse aResponse, String name, Object type, boolean addSpace) {
    	if(type == null)
    		return;
    	if(name == null)
    		name = "???";
    	int mode = 0;
    	if (type instanceof Number) {
			mode = ((Number)type).intValue();
		} else if(type instanceof CharSequence) {
			mode = ((CharSequence)type).length();
		} else {
			mode = 1;
		}
    	
    	switch (mode) {
    	case 0:
    		return;
    	case 1:
    		aResponse.appendContentCharacter(name.charAt(0));
    		aResponse.appendContentCharacter('.');
    		break;
    	default:
    		aResponse.appendContentString(name);
    	break;
    	}
    	if(addSpace)
    		aResponse.appendContentCharacter(' ');
    }


    public WOActionResults invokeAction(WORequest aRequest, WOContext aContext) {
    	return null;
    }
    
    public void takeValuesFromRequest(WORequest aRequest, WOContext aContext) {
    	;
    }
    
	public boolean isStateless() {
		return true;
	}
	
	public boolean synchronizesVariablesWithBindings() {
        return false;
	}
}