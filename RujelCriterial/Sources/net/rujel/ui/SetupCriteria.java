package net.rujel.ui;

import java.util.logging.Logger;

import net.rujel.base.SettingsBase;
import net.rujel.criterial.CriteriaSet;
import net.rujel.reusables.SessionedEditingContext;
import net.rujel.reusables.WOLogLevel;

import com.webobjects.appserver.WOActionResults;
import com.webobjects.appserver.WOContext;
import com.webobjects.appserver.WOComponent;
import com.webobjects.eoaccess.EOUtilities;
import com.webobjects.eocontrol.EOEditingContext;
import com.webobjects.eocontrol.EOKeyGlobalID;
import com.webobjects.eocontrol.EOSortOrdering;
import com.webobjects.foundation.NSArray;
import com.webobjects.foundation.NSMutableArray;

public class SetupCriteria extends WOComponent {
	
	public static final NSArray sorter = new NSArray(new EOSortOrdering(CriteriaSet.COMMENT_KEY,
			EOSortOrdering.CompareCaseInsensitiveAscending));
	public static final Logger logger = Logger.getLogger("rujel.criterial");
	
    public SetupCriteria(WOContext context) {
        super(context);
        ec = new SessionedEditingContext(context.session());
        base = SettingsBase.baseForKey(CriteriaSet.ENTITY_NAME, ec, true);
        if(ec.hasChanges()) {
        	try {
				ec.saveChanges();
				logger.log(WOLogLevel.COREDATA_EDITING,"Autogenerated CriteriaSet setting",
						session());
			} catch (Exception e) {
				logger.log(WOLogLevel.WARNING,"Error autogenerating CriteriaSet setting",
						new Object[] {session(),e});
				return;
			}
        }
        NSArray found = EOUtilities.objectsForEntityNamed(ec, CriteriaSet.ENTITY_NAME);
        if(found != null && found.count() > 0) {
        	sets = found.mutableClone();
        	EOSortOrdering.sortArrayUsingKeyOrderArray(sets, sorter);
        } else {
        	sets = new NSMutableArray();
        }
		currID = base.numericValue();
		if(currID == null || currID.intValue() == 0)
			return;
		currSet = (CriteriaSet)EOUtilities.objectWithPrimaryKeyValue(ec, 
				CriteriaSet.ENTITY_NAME, currID);
    }
    
    public EOEditingContext ec;
    protected SettingsBase base;
    public NSMutableArray sets;
    public CriteriaSet currSet;
    public Integer currID;
    public Object item;
    
    public WOActionResults selectSet() {
    	setCurrSet((CriteriaSet)item);
    	return null;
    }
    
    public void setCurrSet(CriteriaSet set) {
    	currSet = set;
    	if(set == null) {
    		currID = null;
    	} else {
    		EOKeyGlobalID gid = (EOKeyGlobalID)ec.globalIDForObject(set);
    		currID = (Integer)gid.keyValues()[0];
    	}
    }

    public boolean synchronizesVariablesWithBindings() {
        return false;
	}
}