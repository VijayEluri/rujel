HasStudent: WOConditional {
	condition = ^student;
}
TitlePresenter: WOSwitchComponent {
	cycle = ^course.cycle;
	WOComponentName = studentPresenter;
	isSelected = false;
	cellID = cellID;
	readOnly = true;
	denyCreation = true;
	single=true;
	full=true;
}

DateTitle: WOString {
	value = application.strings.Reusables_Strings.dataTypes.date;
}

ThemeTitle: WOString {
	value = application.strings.RujelInterfaces_Names.EduLesson.theme;
}

IfAbbreviated: WOConditional {
	condition = ^wide;
	negate = true;
}

HTtitle: WOString {
	value = application.strings.RujelInterfaces_Names.EduLesson.ht;
	valueWhenEmpty = "HT";
}

IfFull: WOConditional {
	condition = ^wide;
}

HomeTaskTitle: WOString {
	value = application.strings.RujelInterfaces_Names.EduLesson.homeTask;
	valueWhenEmpty = "Home Task";
}

LessonRow: WOGenericContainer {
	elementName = "tr";
	class = rowItem.rowClass;
	bgcolor = rowItem.rowColor;
	height = rowItem.height;
}

LessonDate: WOString {
	value = rowItem.date;
	dateformat = application.prefs.ui.shortDateFormat;
}

LessonTheme: WOString {
	value = rowItem.theme;
}

Conditional1: WOConditional {
	condition = ^currLesson;
}

SaveButton: WOSubmitButton {
	action = ^save;
	value = application.strings.Reusables_Strings.uiElements.Save;
	disabled = access._edit;
}

DeleteButton: WOGenericElement {
	elementName = "input";
	type = "button";
	invokeAction = ^delete;
	value = application.strings.Reusables_Strings.uiElements.Delete;
	onclick = session.confirmMessage;
}

ThemeCell : OnClickContainer {
  elementName = "td";
  class = rowItem.cellClass;
  title = rowItem.rowHover;
  style = rowItem.cellStyle;
  invokeAction = selectLesson;
  onclick = session.checkRun;
  colspan = rowItem.colspan;
}

CanCreate : WOConditional {
  condition = access.create;
}

ShowAdd : WOSubmitButton {
  value = application.strings.Reusables_Strings.uiElements.Add;
  action = newLessonPopup;
  onclick = "ajaxPost(this);return false;";
}

CanSave: WOConditional {
	condition = access.edit;
}

CanDelete : WOConditional {
  condition = access.delete;
}

InternalRows : WORepetition {
  list = rows;
  item = rowItem;
}

DateCell : OnClickContainer {
  elementName = "td";
  align="center";
  onclick = session.checkRun;
  invokeAction = selectLesson;
  class = rowItem.dateClass;
  style = rowItem.dateStyle;
  hide = rowItem.skipDate;
  rowspan = rowItem.dateSpan;
}

ExtCell : OnClickContainer {
  elementName = "td";
  onclick = showHomeTaskOnClick;
  invokeAction = popupHomeTask;
  class = rowItem.extClass;
  style = rowItem.extStyle;
  title = rowItem.extHover;
  hide = rowItem.skipExt;
  rowspan = rowItem.extSpan;
}

ExtValue : WOString {
  value = rowItem.extShort;
  escapeHTML = false;
}

Separator : WOGenericContainer {
  elementName = "td";
  class = rowItem.separatorClass;
  colspan = "3";
  height = "1";
}

ShowSeparator : WOConditional {
  condition = rowItem.separatorClass;
}

LastCurrent : WOConditional {
  condition = activeRow;
}
