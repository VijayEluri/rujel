StudentTitle: WOString {
	value = application.strings.RujelInterfaces_Names.Student.this;
}

IfSave: WOConditional {
	condition = canSave;
}

Save: WOSubmitButton {
	action = save;
	align = "right";
	value = application.strings.Reusables_Strings.uiElements.Save;
}

LessonsNumeration: WORepetition {
	item = lessonItem;
	list = lessonsListing;
}

TitlePresenter: WOSwitchComponent {
	WOComponentName = presenter;
	lesson = lessonItem;
	isSelected = isSelected;
	readOnly = ^readOnly;
	single=single;
	selectAction = selectLesson;
	views = ^views;
	course = ^course;
}

ActiveAddOnsRepetition: WORepetition {
	item = addOnItem;
	list = activeAddOns;
}

ActiveAddOnComponent: WOSwitchComponent {
	WOComponentName = addOnItem.activeComponent;
	student = studentItem;
	course = ^course;
	single=single;
	currAddOn = addOnItem;
	rowspan = rowspan;
}

TitleAddOnComponent: WOSwitchComponent {
	WOComponentName = addOnItem.activeComponent;
	course = ^course;
	single=single;
	currAddOn = addOnItem;
	titleRow = true;
}
Repetition1: WORepetition {
	list = ^studentsList;
	item = studentItem;
	index = idx;
}

StudentRow: WOGenericContainer {
	class = studentStyle;
	elementName = "tr";
	style = "height:2.2em;";
}

Index: WOString {
	value = number;
	escapeHTML = false;
}

StudentTD: OnClickContainer {
	align = "left";
	elementName = "td";
	invokeAction = studentSelection;
	onclick = session.checkRun;
	disabled = cantSelectStudent;
	title = studentItem.person.secondName;
	colspan = 2;
	style = "white-space:nowrap;";
}

StudentName: PersonDisplay {
	person = studentItem;
	last = 2;
	first = 2;
	second = 0;
	startWithLast = true;
}

NotePresenter1: WOSwitchComponent {
	WOComponentName = presenter;
	lesson = lessonItem;
	isSelected = isSelected;
	cellID = cellID;
	readOnly = ^readOnly;
	selectAction = selectLesson;
	student = studentItem;
	single=single;
	presenterCache = presenterCache;
	access = access;
	views = ^views;
	index = idx;
	course = ^course;
}

AllAddOnsRepetition: WORepetition {
	item = addOnItem;
	list = allAddOns;
}

AddOnSetupComponent: WOSwitchComponent {
	WOComponentName = addOnItem.component;
	course = ^course;
	activeAddOns = activeAddOns;
	currAddOn = addOnItem;
}

Repetition2: WORepetition {
	list = unmentionedStudents;
	item = studentItem;
	index = idx;
}

NotePresenter2: WOSwitchComponent {
	WOComponentName = presenter;
	lesson = lessonItem;
	isSelected = isSelected;
	cellID = cellID;
	readOnly = ^readOnly;
	selectAction = selectLesson;
	student = studentItem;
	denyCreation = true;
	single=^single;
	presenterCache = presenterCache;
}

StudentNotes : WOString {
  value = studentNotes;
  escapeHTML = false;
}

IsConsolidated : WOConditional {
  condition = ^present.consolidated;
}

AddonsSpan : WOGenericContainer {
  elementName = "td";
  colspan = addOnsSpan;
}

HasAddons : WOConditional {
  condition = addOnsSpan;
}

MonthsRow : WOString {
  value = monthsRow;
  escapeHTML = false;
}

ConsolidatedTitle : ConsolidatedCell {
	lesson = lessonItem;
	single=single;
	presenterCache = presenterCache;
	titleRow = true;
	views = ^views;
}

AllAddonsCell : WOGenericContainer {
  elementName = "td";
  align="right";
  style="padding:5pt;vertical-align:middle;";
  valign="middle";
  rowspan = rowspan;
  colspan = 2;
  width = "90%";
}

NotSingle : WOConditional {
  condition = single;
  negate = true;
}
