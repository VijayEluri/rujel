// AdminPage.java: Class file for WO Component 'AdminPage'

/*
 * Copyright (c) 2008, Gennady & Michael Kushnir
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 * 
 * 	•	Redistributions of source code must retain the above copyright notice, this
 * 		list of conditions and the following disclaimer.
 * 	•	Redistributions in binary form must reproduce the above copyright notice,
 * 		this list of conditions and the following disclaimer in the documentation
 * 		and/or other materials provided with the distribution.
 * 	•	Neither the name of the RUJEL nor the names of its contributors may be used
 * 		to endorse or promote products derived from this software without specific 
 * 		prior written permission.
 * 		
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
 * SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
 * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
 * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
 * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

package net.rujel.ui;

import java.util.logging.Logger;

import net.rujel.reusables.SessionedEditingContext;
import net.rujel.reusables.Various;
import net.rujel.reusables.WOLogLevel;

import com.webobjects.appserver.*;
import com.webobjects.eocontrol.EOEditingContext;
import com.webobjects.eocontrol.EOSortOrdering;
import com.webobjects.foundation.NSArray;
import com.webobjects.foundation.NSKeyValueCodingAdditions;
import com.webobjects.foundation.NSMutableArray;
import com.webobjects.appserver.WOActionResults;

// Generated by the WOLips Templateengine Plug-in at Jun 17, 2009 2:24:57 PM
public class AdminPage extends com.webobjects.appserver.WOComponent {
	
	public NSArray modules;
	public NSKeyValueCodingAdditions currModule;
    public EOEditingContext ec;
    public Object item;
	
    public AdminPage(WOContext context) {
        super(context);
        modules = (NSArray)session().valueForKeyPath("modules.adminModules");
        if(Various.boolForObject(session().valueForKeyPath("readAccess.edit.ReporterSetup"))) {
        	Object reporter = application().valueForKeyPath(
        			"strings.Strings.AdminPage.printReport");
        	if(modules == null) {
        		modules = new NSMutableArray(reporter);
        	} else {
        		if (!(modules instanceof NSMutableArray))
        			modules = modules.mutableClone();
        		Various.addToSortedList(reporter, (NSMutableArray) modules, 
        				"sort", EOSortOrdering.CompareAscending);
        	}
        }
        if(Various.boolForObject(session().valueForKeyPath("readAccess.read.Maintenance"))) {
        	Object maintance = application().valueForKeyPath(
        			"strings.Strings.AdminPage.maintenance"); 
        	Object bugReport = application().valueForKeyPath(
					"strings.Strings.AdminPage.bugReport"); 
        	if(modules == null) {
        		modules = new NSMutableArray(maintance);
        	} else {
        		if (!(modules instanceof NSMutableArray))
        			modules = modules.mutableClone();
        		((NSMutableArray)modules).addObject(maintance);
        	}
        	((NSMutableArray)modules).addObject(bugReport);
        }
        if(modules != null && modules.count() > 0) {
        	currModule = (NSKeyValueCodingAdditions)modules.objectAtIndex(0);
        	
        }
        ec = new SessionedEditingContext(context.session());
    }

	public WOActionResults saveSetting() {
		if(!ec.hasChanges())
			return null;
		Logger logger = Logger.getLogger("rujel.admin");
		try {
			ec.saveChanges();
			logger.log(WOLogLevel.CONFIG,"Saved configuration for '" + 
					currModule.valueForKey("settingBase") + '\'', session());
		} catch (Exception e) {
			session().takeValueForKey(e.getMessage(), "message");
			logger.log(WOLogLevel.WARNING,"Failed saving configuration for '" + 
					currModule.valueForKey("settingBase") + '\'', new Object[] {session(),e});
			ec.revert();
		}
		return null;
	}
}