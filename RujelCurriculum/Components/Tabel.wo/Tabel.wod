PageWrapper : PageWrapper {
	title = title;
}

Title : WOString {
  value = application.strings.RujelCurriculum_Curriculum.Tabel.extTitle;
  escapeHTML = false;
  valueWhenEmpty = "Teachers tabel";
}

Form : WOForm {
}

SelectMonth : WOPopUpButton {
  list = months;
  item = item;
  selection = currMonth;
  displayString = item.name;
  onchange = "this.form.submit();";
}

Month : WOString {
  value = currMonth.name;
  escapeHTML = false;
}

Year : WOString {
  value = currMonth.year;
  numberformat = "0";
  escapeHTML = false;
}

SubmitButton : WOGenericElement {
  elementName = "input";
  type = "submit";
  value = application.strings.RujelReports_Reports.export;
  style = "float:right;";
}

ExportDetails : WOHyperlink {
  action = exportDetails;
  string = application.strings.RujelReports_Reports.export;
}

SelectTeacher : OnClickContainer {
  elementName = "span";
  class = "button";
  invokeAction = selectTeacher;
  onclick = session.ajaxPopup;
  hide = cantSelect;
}

TeacherName : PersonDisplay {
  person = currTeacher;
  last = 2;
  first = 2;
  second = 2;
  startWithLast = true;
  valueWhenEmpty = session.strings.RujelBase_Base.vacant;
}

Row : WOGenericContainer {
  elementName = "tr";
  class = item.class;
  style = "height:2em;vertical-align:middle;";
}

Details : WORepetition {
  list = details;
  style = item.style;
  item = item;
}

HeaderCell : OnClickContainer {
  elementName = "td";
  colspan = item.colspan;
  title = item.hover;
  disabled  = item.colspan;
  onclick = session.tryLoad;
  invokeAction = openCourse;
  align = "center";
}

SubjectString : WOString {
  value = item.subject;
  escapeHTML = false;
}

NoColspan : WOConditional {
  condition = item.colspan;
  negate = true;
}

GroupName : WOString {
  value = item.eduGroup;
}

Days : WORepetition {
  count = currMonth.days;
  index = index;
}

Value : WOString {
  value = value;
  escapeHTML = false;
}

SumValue : WOString {
  value = sum;
  escapeHTML = false;
}

SumTitle : WOString {
  value = application.strings.RujelCurriculum_Curriculum.Tabel.total;
  valueWhenEmpty = "total";
  escapeHTML = false;
}

DateTitle : WOString {
  value = session.strings.Reusables_Strings.dataTypes.Date;
  valueWhenEmpty = "Date";
  escapeHTML = false;
}

HasDetails : WOConditional {
  condition = details.count;
}

WholeSchool : WOString {
  value = application.strings.RujelCurriculum_Curriculum.Tabel.wholeSchool;
  valueWhenEmpty = "Whole school";
  escapeHTML = false;
}

TeacherTitle : WOString {
  value = application.strings.RujelInterfaces_Names.Teacher.this;
  valueWhenEmpty = "Teacher";
}

CanCreate : WOConditional {
  condition = session.readAccess.create.Tabel;
}

Cell : WOGenericContainer {
  elementName = "td";
  title = cellHover;
  class = cellClass;
}

TotalForm : WOForm {
  style = "position:absolute;top:3em;right:4em;padding:1ex;";
  action = export;
}

ShowDetailsTitle : WOString {
  value = application.strings.RujelCurriculum_Curriculum.Tabel.showDetails;
  valueWhenEmpty = "show details";
  escapeHTML = false;
}

ShowDetails : WOCheckBox {
  checked = options.showDetails;
}

ShowLoad : WOCheckBox {
  checked = options.showLoad;
}

ShowLoadTitle : WOString {
  value = application.strings.RujelCurriculum_Curriculum.Tabel.load;
  valueWhenEmpty = "show details";
  escapeHTML = false;
}

Hours : WOString {
  value = item.hours;
  escapeHTML = false;
}

HoursTitle : WOString {
  value = application.strings.RujelCurriculum_Curriculum.Tabel.loadShort;
  valueWhenEmpty = "load";
  escapeHTML = false;
}

JournalZPU : WORepetition {
  list = journalZPU;
  item = item;
}

JRow : WOGenericContainer {
  elementName = "tr";
  class = jrowClass;
}

JDate : WOString {
  value = item.date;
  dateformat = application.prefs.ui.dateFormat;
}

MinusTeacher : PersonDisplay {
  person = item.minusTeacher;
  second = 1;
  first = 1;
  last = 2;
  startWithLast = true;
  valueWhenEmpty = session.strings.RujelBase_Base.vacant;
  emptyStyle = "font-style:italic;";
}

MinusSubject : WOString {
  value = item.minusCourse.subjectWithComment;
  escapeHTML = false;
}

Reason : ReasonPresenter {
  reason = item.reason;
  refTeacher = currTeacher;
}


PlusTeacher : PersonDisplay {
  person = item.plusTeacher;
  second = 1;
  first = 1;
  last = 2;
  startWithLast = true;
}

PlusSubject : WOString {
  value = item.plusCourse.subjectWithComment;
  escapeHTML = false;
}


JValue : WOString {
  value = item.value;
}

JEduGrop : WOString {
  value = item.eduGroup.name;
  valueWhenEmpty = item.grade;
}

JHasCourse : WOConditional {
  condition = item.minusCourse;
}

OrigTitle : WOString {
  value = session.strings.RujelCurriculum_Curriculum.OrigTeacher;
  escapeHTML = false;
}
GroupTitle : WOString {
  value = session.strings.RujelInterfaces_Names.EduGroup.this;
  escapeHTML = false;
}
SubjectTitle : WOString {
  value = session.strings.RujelInterfaces_Names.EduCycle.subject;
  escapeHTML = false;
}
ReasonTitle : WOString {
  value = session.strings.RujelCurriculum_Curriculum.Reason.Reason;
  escapeHTML = false;
}
SustitutorTitle : WOString {
  value = session.strings.RujelCurriculum_Curriculum.Substitute.Substitutor;
  escapeHTML = false;
}
FactorTitle : WOString {
  value = session.strings.RujelCurriculum_Curriculum.Substitute.factor;
  escapeHTML = false;
}

ExportZPU : WOHyperlink {
  action = exportTeacherZPU;
  string = application.strings.RujelReports_Reports.export;
}
TitleZPU : WOString {
  value = session.strings.RujelCurriculum_Curriculum.Tabel.journalZPU;
  escapeHTML = false;
}

HasJournalZPU : WOConditional {
  condition = journalZPU.count;
}

FormZPU : WOForm {
  action = exportFullZPU;
}

IncludeAdded : WOCheckBox {
  checked = options.includeAdded;
}

AddedTitle : WOString {
  value = session.strings.RujelCurriculum_Curriculum.Tabel.includeAdded;
  escapeHTML = false;
}

UnsubmittedTitle : WOString {
  value = session.strings.RujelCurriculum_Curriculum.Tabel.omitUnsubmitted;
  escapeHTML = false;
}

OmitUnsubmitted : WOCheckBox {
  checked = options.omitUnsubmitted;
}

ReasonCell : WOGenericContainer {
  elementName = "td";
  class = item.cellClass;
  title = item.reason.verification;
}
