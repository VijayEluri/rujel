//ReprPlugin.java: Class file for WO Component 'ReprPlugin'

/*
 * Copyright (c) 2008, Gennady & Michael Kushnir
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 * 
 * 	•	Redistributions of source code must retain the above copyright notice, this
 * 		list of conditions and the following disclaimer.
 * 	•	Redistributions in binary form must reproduce the above copyright notice,
 * 		this list of conditions and the following disclaimer in the documentation
 * 		and/or other materials provided with the distribution.
 * 	•	Neither the name of the RUJEL nor the names of its contributors may be used
 * 		to endorse or promote products derived from this software without specific 
 * 		prior written permission.
 * 		
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
 * SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
 * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
 * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
 * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

package net.rujel.curriculum;

import java.util.Enumeration;

import net.rujel.interfaces.EduCourse;
import net.rujel.reusables.Various;

import com.webobjects.appserver.*;
import com.webobjects.eoaccess.EOUtilities;
import com.webobjects.eocontrol.EOSortOrdering;
import com.webobjects.foundation.*;

// Generated by the WOLips Templateengine Plug-in at Jun 5, 2009 12:55:13 PM
public class ReprPlugin extends com.webobjects.appserver.WOComponent {
	
	public NSDictionary agregate;
	
    public ReprPlugin(WOContext context) {
        super(context);
    }
    
    public void appendToResponse(WOResponse aResponse, WOContext aContext) {
    	EduCourse course = (EduCourse)valueForBinding("course");
    	agregate = agregate(course);
    	if(agregate != null || 
    		Various.boolForObject(session().valueForKeyPath("readAccess.create.Reprimand")))
    		super.appendToResponse(aResponse, aContext);
    }

	public WOActionResults popup() {
		WOComponent popup = pageWithName("ReprimList");
//		if(agregate != null)
//			popup.takeValueForKey(agregate.valueForKey("list"), "list");
		popup.takeValueForKey(valueForBinding("course"), "course");
		popup.takeValueForKey(context().page(), "returnPage");
		return popup;
	}

    public static NSDictionary agregate(EduCourse course) {
       	NSArray list = EOUtilities.objectsMatchingKeyAndValue(course.editingContext(),
    			Reprimand.ENTITY_NAME, "course", course);
       	if(list == null || list.count() == 0)
       		return null;
    	if(list.count() > 1) {
    		EOSortOrdering so = new EOSortOrdering(Reprimand.RAISED_KEY, 
    				EOSortOrdering.CompareDescending);
    		list = EOSortOrdering.sortedArrayUsingKeyOrderArray(list, new NSArray(so));
    	}
    	NSMutableDictionary result = new NSMutableDictionary(list,"list");
    	result.takeValueForKey(new Integer(list.count()), "count");
    	int open = 0;
    	int closed = 0;
//    	NSTimestamp last = null;
    	NSTimestamp lastOpen = null;
    	Enumeration enu = list.objectEnumerator();
    	while (enu.hasMoreElements()) {
			Reprimand rep = (Reprimand) enu.nextElement();
			if(rep.relief() == null) {
				open++;
				if(lastOpen == null || lastOpen.compare(rep.raised()) < 0)
					lastOpen = rep.raised();
			} else {
				closed++;
			}
//			if(last == null || last.compare(rep.raised()) < 0)
//				last = rep.raised();
		}
//    	result.takeValueForKey(last, "last");
    	result.takeValueForKey(lastOpen, "lastOpen");
    	result.takeValueForKey(new Integer(open), "open");
    	result.takeValueForKey(new Integer(closed), "closed");
    	result.takeValueForKey((open > 0)?"warning":"gerade","styleClass");
    	return result;
    }
    
	public boolean isStateless() {
		return true;
	}
	
	public boolean synchronizesVariablesWithBindings() {
		return false;
	}
	
	public void reset() {
		agregate = null;
		super.reset();
	}
}