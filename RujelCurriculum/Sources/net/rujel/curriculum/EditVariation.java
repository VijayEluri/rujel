// EditVariation.java: Class file for WO Component 'EditVariation'

/*
 * Copyright (c) 2008, Gennady & Michael Kushnir
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 * 
 * 	•	Redistributions of source code must retain the above copyright notice, this
 * 		list of conditions and the following disclaimer.
 * 	•	Redistributions in binary form must reproduce the above copyright notice,
 * 		this list of conditions and the following disclaimer in the documentation
 * 		and/or other materials provided with the distribution.
 * 	•	Neither the name of the RUJEL nor the names of its contributors may be used
 * 		to endorse or promote products derived from this software without specific 
 * 		prior written permission.
 * 		
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
 * SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
 * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
 * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
 * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

package net.rujel.curriculum;

import java.util.logging.Logger;

import net.rujel.base.MyUtility;
import net.rujel.interfaces.EduCourse;
import net.rujel.interfaces.EduLesson;
import net.rujel.interfaces.Person;
import net.rujel.reusables.SettingsReader;
import net.rujel.reusables.Various;
import net.rujel.reusables.WOLogLevel;

import com.webobjects.appserver.*;
import com.webobjects.eoaccess.EOUtilities;
import com.webobjects.eocontrol.EOEditingContext;
import com.webobjects.foundation.NSKeyValueCoding;
import com.webobjects.foundation.NSTimestamp;

// Generated by the WOLips Templateengine Plug-in at Feb 10, 2009 4:28:30 PM
public class EditVariation extends com.webobjects.appserver.WOComponent {
	
	public WOComponent returnPage;
	public EduCourse course;
	public Variation variation;
	public Reason reason;
	public NSTimestamp date;
	protected String oldDate;
	public EduLesson lesson;
	
	public Integer abs;
	public boolean negative;
	
	public boolean onlyChooseReason = false;
	public boolean returnNormaly = false;
	
    public EditVariation(WOContext context) {
        super(context);
    }

    public void appendToResponse(WOResponse aResponse, WOContext aContext) {
    	super.appendToResponse(aResponse, aContext);
    	oldDate = MyUtility.dateFormat().format(date);
    }
    
    public void setVariation(Object var) {
    	if(var instanceof Variation) {
    		variation = (Variation)var;
    		reason = variation.reason();
    		lesson = variation.relatedLesson();
    		course = variation.course();
    		onlyChooseReason = (lesson != null);
    		if(!onlyChooseReason) {
    			session().setObjectForKey(variation, "readAccess");
    			if(Various.boolForObject(session().valueForKeyPath("readAccess._edit.session")))
    				onlyChooseReason = true;
    			session().removeObjectForKey("readAccess");
    		}
    	}
   		date = (NSTimestamp)NSKeyValueCoding.Utility.valueForKey(var,Variation.DATE_KEY);
		setValue((Integer)NSKeyValueCoding.Utility.valueForKey(var,Variation.VALUE_KEY));
    }
    
    public void setLesson(EduLesson lesson) {
    	this.lesson = lesson;
    	if(lesson != null)
    		onlyChooseReason = true;
    	abs = new Integer(1);
    	negative = false;
    	if(lesson == null)
    		return;
    	date = lesson.date();
    	if(course == null)
    		course = lesson.course();
    	else if(lesson.course() != course)
    		negative = true;
    }
    
    public void setValue(Integer value) {
    	if(value == null) {
    		abs = new Integer(1);
    		negative = true;
    	} else {
    		abs = value;
    		negative = (abs.intValue() <= 0);
    		if(negative)
    			abs = new Integer(-abs.intValue());
    	}
    }
    
    public String dateOnClick() {
    	StringBuffer result = new StringBuffer("var d = prompt('");
    	result.append(application().valueForKeyPath(
    			"strings.RujelCurriculum_Curriculum.title.editVarDate"));
    	result.append("',this.value);if(v!=null&&this.value!=v){this.value=v;ajaxPost('upDate');}return false;");
    	return result.toString();
    }
    
    public WOActionResults updateDate() {
    	if(date == null || !MyUtility.eduYearForDate(date).equals(course.eduYear()))
    		date = (NSTimestamp)session().valueForKey("today");
    	if(reason != null) {
    		if(date == null || date.compareTo(reason.begin()) < 0 || 
    				(reason.end() != null && date.compareTo(reason.end()) > 0))
    			reason = null;
    	}
    	return this;
    }
    
    public Boolean nullDate() {
    	if (date == null) return Boolean.TRUE;
    	if (variation == null) return Boolean.FALSE;
    	return (Boolean)session().valueForKeyPath("readAccess._edit.variation");
    }
    
    public WOActionResults done() {
    	return done(false);
    }

    public WOActionResults done(boolean hasChanges) {
    	returnPage.ensureAwakeInContext(context());
    	if(hasChanges && (returnPage instanceof VariationsList)) {
    		returnPage.takeValueForKey(Boolean.TRUE,"hasChanges");
    		returnPage.takeValueForKey(null,"planFact");
    	}
    	if(hasChanges)
			session().removeObjectForKey("lessonProperies");
       	return returnPage;
    }
    
    public WOActionResults save() {
    	if(date == null || !MyUtility.dateFormat().format(date).equals(oldDate))
    		return updateDate();
    	if(abs == null || reason == null) {
    		session().takeValueForKey(application().valueForKeyPath(
    				"strings.RujelCurriculum_Curriculum.messages.wrongVariation"), "message");
    		return done(false);
    	}
    	Integer value = (negative)?new Integer(-abs.intValue()):abs;
    	EOEditingContext ec = course.editingContext();
    	if(variation != null && variation.date().equals(date) && variation.value().equals(value)
    			 && variation.reason() == reason && !ec.updatedObjects().contains(reason))
    		return done(false);
    	ec.lock();
    	if(variation == null) {
    		variation = (Variation)EOUtilities.createAndInsertInstance(ec, Variation.ENTITY_NAME);
    		variation.setCourse(course);
    	}
    	variation.setValue(value);
    	variation.setDate(date);
    	variation.addObjectToBothSidesOfRelationshipWithKey(reason, "reason");
    	variation.setRelatedLesson(lesson);
    	try {
			ec.saveChanges();
			boolean disable = Boolean.getBoolean("PlanFactCheck.disable")
			|| SettingsReader.boolForKeyPath("edu.disablePlanFactCheck", false);
			if(!disable) {
				String usr = (String)session().valueForKeyPath("user.present");
				if(usr == null)
					usr = "??" + Person.Utility.fullName(
							course.teacher(), true, 2, 1, 1);
				Reprimand.autoRelieve(course, date, usr);
			}
		} catch (Exception e) {
			ec.revert();
			Object[] args = new Object[] {session(),e,variation}; 
			Logger.getLogger("rujel.curriculum").log(WOLogLevel.WARNING,
					"Error saving Variation",args);
			session().takeValueForKey(e.getMessage(), "message");
		} finally {
			ec.unlock();
		}
    	return done(true);
    }
    
    public Object canDelete() {
    	if(variation == null)
    		return Boolean.FALSE;
    	return session().valueForKeyPath("readAccess.delete.variation");
    }
    
    public WOActionResults delete() {
    	if(variation == null)
    		return done(false);
    	EOEditingContext ec = variation.editingContext();
    	ec.lock();
    	ec.deleteObject(variation);
    	try {
    		ec.saveChanges();
			boolean disable = Boolean.getBoolean("PlanFactCheck.disable")
			|| SettingsReader.boolForKeyPath("edu.disablePlanFactCheck", false);
			if(!disable) {
				String usr = (String)session().valueForKeyPath("user.present");
				if(usr == null)
					usr = "??" + Person.Utility.fullName(
							course.teacher(), true, 2, 1, 1);
				Reprimand.autoRelieve(course, date, usr);
			}
 		} catch (Exception e) {
			ec.revert();
			Object[] args = new Object[] {session(),e,variation}; 
			Logger.getLogger("rujel.curriculum").log(WOLogLevel.WARNING,
					"Error deleting Variation",args);
			session().takeValueForKey(e.getMessage(), "message");
		} finally {
			ec.unlock();
    	}
    	return done(true);
    }
    
    public String onsubmit() {
    	if(returnNormaly)
    		return null;
    	else
    		return "ajaxPost(this);return false;";
    }
    
    public String onDelete() {
    	if(returnNormaly)
    		return (String)session().valueForKey("confirmMessage");
		String href = context().componentActionURL();
   	return "if(confirmAction(this.value,event))ajaxPopupAction('" + href + "');";
    }
    
    public String onCancel() {
       	if(returnNormaly)
    		return "closePopup();";
    	else
    		return (String)session().valueForKey("ajaxPopupNoPos");    	
    }
}