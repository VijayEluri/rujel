// ReasonArchivePresenter.java: Class file for WO Component 'ReasonArchivePresenter'

/*
 * Copyright (c) 2008, Gennady & Michael Kushnir
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 * 
 * 	•	Redistributions of source code must retain the above copyright notice, this
 * 		list of conditions and the following disclaimer.
 * 	•	Redistributions in binary form must reproduce the above copyright notice,
 * 		this list of conditions and the following disclaimer in the documentation
 * 		and/or other materials provided with the distribution.
 * 	•	Neither the name of the RUJEL nor the names of its contributors may be used
 * 		to endorse or promote products derived from this software without specific 
 * 		prior written permission.
 * 		
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
 * SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
 * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
 * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
 * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

package net.rujel.curriculum;

import java.text.SimpleDateFormat;

import net.rujel.base.MyUtility;

import com.webobjects.appserver.*;
import com.webobjects.foundation.*;

// Generated by the WOLips Templateengine Plug-in at Apr 6, 2009 12:55:04 PM
public class ReasonArchivePresenter extends com.webobjects.appserver.WOComponent {
    private NSDictionary _dict;
	
	public ReasonArchivePresenter(WOContext context) {
        super(context);
    }
	
	public NSDictionary data() {
		if(_dict == null) {
			_dict = (NSDictionary)valueForBinding("data");
		}
		return _dict;
	}
	
	protected static String presentDate(Object date) {
		if(date == null) {
			return null;
		} else if(date instanceof NSTimestamp) {
			return MyUtility.dateFormat().format(date);
		} else {
			String dateString = date.toString();
			if(dateString == null || dateString.length() <= 10)
				return dateString;
			try {
				SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss 'Etc/'z");
				date = format.parseObject(dateString);
				return MyUtility.dateFormat().format(date);
			} catch (Exception e) {
				return dateString;
			}
		}
	}
	
	public String begin() {
		Object date = data().valueForKey("begin");
		return presentDate(date);
	}
	
	public String end() {
		Object date = data().valueForKey("end");
		return presentDate(date);
	}
	
	public String relation() {
		String tmp = (String) data().valueForKey("teacher");
		if(tmp != null)
			return tmp;
		tmp = (String) data().valueForKey("eduGroup");
		if(tmp != null)
			return tmp;
		tmp = (String) data().valueForKey("relation");
		return tmp;
	}

	public boolean isStateless() {
		return true;
	}
	public boolean synchronizesVariablesWithBindings() {
        return false;
	}
	
	public void reset() {
		_dict = null;
		super.reset();
	}

}