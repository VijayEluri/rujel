//VariationsList.java: Class file for WO Component 'VariationsList'

/*
 * Copyright (c) 2008, Gennady & Michael Kushnir
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 * 
 * 	•	Redistributions of source code must retain the above copyright notice, this
 * 		list of conditions and the following disclaimer.
 * 	•	Redistributions in binary form must reproduce the above copyright notice,
 * 		this list of conditions and the following disclaimer in the documentation
 * 		and/or other materials provided with the distribution.
 * 	•	Neither the name of the RUJEL nor the names of its contributors may be used
 * 		to endorse or promote products derived from this software without specific 
 * 		prior written permission.
 * 		
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
 * SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
 * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
 * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
 * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

package net.rujel.curriculum;

import net.rujel.base.MyUtility;
import net.rujel.interfaces.EduCourse;

import com.webobjects.appserver.*;
import com.webobjects.eoaccess.EOUtilities;
import com.webobjects.eocontrol.EOSortOrdering;
import com.webobjects.foundation.NSArray;
import com.webobjects.foundation.NSDictionary;
import com.webobjects.foundation.NSTimestamp;

// Generated by the WOLips Templateengine Plug-in at Feb 10, 2009 4:26:14 PM
public class VariationsList extends WOComponent {
	
	public WOComponent returnPage;
	public EduCourse course;
	public Variation item;
	public String date;
	public Integer value;
	public boolean hasChanges;
	//public String message;
	protected NSTimestamp today;
	
	public NSArray list;
//	public Integer totalPlus;
//	public Integer totalMinus;
//	public Integer totalNet;
	public NSDictionary planFact;
	
    public VariationsList(WOContext context) {
        super(context);
       	
    }
    
    public void appendToResponse(WOResponse aResponse, WOContext aContext) {
    	list = EOUtilities.objectsMatchingKeyAndValue(course.editingContext(),
    			Variation.ENTITY_NAME, "course", course);
    	if(list != null && list.count() > 1)
    		list = EOSortOrdering.sortedArrayUsingKeyOrderArray(list, MyUtility.dateSorter);
    	/*
    	if(list != null && list.count() > 0) {
    		Enumeration enu = list.objectEnumerator();
    		int plus = 0;
    		int minus = 0;
    		while (enu.hasMoreElements()) {
				Variation var = (Variation) enu.nextElement();
				if(var.isExternal())
					continue;
				int val = var.value().intValue();
				if(val > 0)
					plus += val;
				else
					minus -= val;
			}
    		totalPlus = new Integer(plus);
    		totalMinus = new Integer(minus);
    		totalNet = new Integer(plus - minus);
    	}*/

    	if(today == null) {
            today = (NSTimestamp)session().valueForKey("today");
           	if(today == null)
           		today = new NSTimestamp();
    	}
    	NSTimestamp recentDate = (NSTimestamp)session().objectForKey("recentDate");
    	if(recentDate == null)
    		recentDate = today;
    	date = MyUtility.dateFormat().format(recentDate);

    	if(planFact == null)
    		planFact = VariationsPlugin.planFact(course, today);
    	super.appendToResponse(aResponse, aContext);
    	session().takeValueForKey(null, "message");
    }
    
/*    public String valueStyle() {
    	if(item.isExternal()) {
    		return "font-weight:bold;text-align:center;color:#666666;";    		
    	}
    	if(item.value().intValue() > 0) {
    		return "font-weight:bold;text-align:left;color:#009933;padding-left:1ex;";
    	}
    	if(item.value().intValue() < 0) {
       		return "font-weight:bold;text-align:right;color:#cc3333;padding-right:1ex;";
    	}
    	return null;
    }
*/    
    public Boolean showSeparator() {
    	if(item == null || today == null)
    		return Boolean.FALSE;
    	if(item.date().compareTo(today) > 0) {
    		today = null;
    		return Boolean.TRUE;
    	}
    	return Boolean.FALSE;
    }
    
    public WOActionResults editVariation() {
    	//message = null;
    	NSTimestamp aDate = null;
    	if(item == null) {
    		aDate = MyUtility.parseDate(date);
    		if(aDate == null)
    			return this;
    	}
    	WOComponent nextPage = pageWithName("EditVariation");
    	nextPage.takeValueForKey(this, "returnPage");
    	nextPage.takeValueForKey(course, "course");
    	if(item != null) {
    		nextPage.takeValueForKey(item, "variation");
    	} else {
    		nextPage.takeValueForKey(value, "value");
    		nextPage.takeValueForKey(aDate, "date");
    	}
    	return nextPage;
    }
    
    public String buttonName() {
    	String keyPath = "strings.Reusables_Strings.uiElements." + ((hasChanges)?"Done":"Cancel");
    	return (String)application().valueForKeyPath(keyPath);
    }
    
    public String buttonOnClick() {
    	if(hasChanges)
    		return (String)session().valueForKey("tryLoad");
    	else 
    		return "closePopup();";
    }
    
    public WOActionResults done() {
    	//message = null;
    	returnPage.ensureAwakeInContext(context());
    	return returnPage;
    }
}