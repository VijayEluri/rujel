// ReasonSelector.java: Class file for WO Component 'ReasonSelector'

/*
 * Copyright (c) 2008, Gennady & Michael Kushnir
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 * 
 * 	•	Redistributions of source code must retain the above copyright notice, this
 * 		list of conditions and the following disclaimer.
 * 	•	Redistributions in binary form must reproduce the above copyright notice,
 * 		this list of conditions and the following disclaimer in the documentation
 * 		and/or other materials provided with the distribution.
 * 	•	Neither the name of the RUJEL nor the names of its contributors may be used
 * 		to endorse or promote products derived from this software without specific 
 * 		prior written permission.
 * 		
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
 * SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
 * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
 * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
 * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

package net.rujel.curriculum;

import java.text.FieldPosition;
import java.text.Format;

import net.rujel.base.MyUtility;
import net.rujel.interfaces.*;
import net.rujel.reusables.Various;

import com.webobjects.appserver.*;
import com.webobjects.eoaccess.EOUtilities;
import com.webobjects.foundation.*;

// Generated by the WOLips Templateengine Plug-in at Jan 29, 2009 4:14:28 PM
public class ReasonSelector extends com.webobjects.appserver.WOComponent {
	public Reason reason;
	protected NSTimestamp _date;
	protected EduCourse _course;
	public Reason rItem;
	public String reasonText;
	public boolean withTeacher = false;
	public boolean withEduGroup = false;
	public String aDate;
	public String begin;
	public String end;
	
    public ReasonSelector(WOContext context) {
        super(context);
    }

    public void appendToResponse(WOResponse aResponse, WOContext aContext) {
    	if(date() != null)
    		aDate = MyUtility.dateFormat().format(date());
    	reason = (Reason)valueForBinding("reason");
    	if(reason != null) {
    		reasonText = reason.reason();
    		withTeacher = (reason.teacher() != null);
    		withEduGroup = (reason.eduGroup() != null);
    		begin = MyUtility.dateFormat().format(reason.begin());
    		if(reason.end() != null)
    			end = MyUtility.dateFormat().format(reason.end());
    	}
    	super.appendToResponse(aResponse, aContext);
    }
    
    public void takeValuesFromRequest(WORequest aRequest, WOContext aContext) {
    	super.takeValuesFromRequest(aRequest, aContext);
    	Object oldReason = null;
    	if(reason == null && reasonText != null) {
    		reason = (Reason)EOUtilities.createAndInsertInstance(
    				course().editingContext(), Reason.ENTITY_NAME);
    		//reason.setReason(reasonText);
    		oldReason = reason;
        	setValueForBinding(reason, "reason");
    	} else {
    		oldReason = valueForBinding("reason");
    	}
    	if(oldReason != null && aDate == null) {
    		reason.setReason(reasonText);
    		reason.setTeacher((withTeacher)?course().teacher():null);
    		reason.setEduGroup((withEduGroup)?course().eduGroup():null);
    		NSTimestamp tmpDate = MyUtility.parseDate(begin);
    		if(tmpDate == null)
    			tmpDate = date();
    		reason.setBegin(tmpDate);
    		if(end != null) {
    		tmpDate = MyUtility.parseDate(end);
    		if(tmpDate == null)
    			tmpDate = date();
    		reason.setEnd(tmpDate);
    		} else {
    			reason.setEnd(null);
    		}
    	} else {
    		setValueForBinding(reason, "reason");
    	}
    }
    
    public EduCourse course() {
    	if(_course == null) {
    		_course = (EduCourse)valueForBinding("course");
    	}
    	return _course;
    }
    
    public NSTimestamp date() {
    	if(_date == null) {
    		_date = (NSTimestamp)valueForBinding("date");
    	}
    	return _date;
    }
    
    public NSArray reasonList() {
    	if (Various.boolForObject(valueForBinding("readOnly")))
    		return ((reason == null)?null:new NSArray(reason));
    	return Reason.reasons(date(), course());
    }
    
    public String styleClass() {
    	if(rItem == null)
    		return "grey";
    	if(rItem == reason)
    		return "selection";
    	if(rItem.unverified())
    		return "ungerade";
    	return "gerade";
    }
    
    public Integer colspan() {
    	if(rItem == null)
    		return null;
    	if(rItem.teacher() == null && rItem.eduGroup() == null)
    		return new Integer(3);
    	return null;
    }
    
    public String title() {
    	if(rItem == null)
    		return null;
    	Format dateFormat = MyUtility.dateFormat();
    	if(rItem.begin().equals(rItem.end()))
    		return dateFormat.format(rItem.begin());
    	StringBuffer result = new StringBuffer(24);
    	FieldPosition fp = new FieldPosition(0);
    	dateFormat.format(rItem.begin(), result, fp);
    	result.append(" - ");
    	if(rItem.end() == null)
    		result.append("...");
    	else
        	dateFormat.format(rItem.end(), result, fp);
    	return result.toString();
    }
    
    public boolean canEditReason() {
    	if(reason == null || rItem != reason || 
    			Various.boolForObject(valueForBinding("readOnly")))
    		return false;
    	return Various.boolForObject(valueForKeyPath("session.readAccess.edit.reason"));
    }
    
	public boolean isStateless() {
		return true;
	}
	
	public boolean synchronizesVariablesWithBindings() {
        return false;
	}

	public void reset() {
		_course = null;
		_date = null;
		reason = null;
		rItem = null;
		reasonText = null;
		aDate = null;
		begin = null;
		end  = null;
		
	}
}