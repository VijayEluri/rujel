// ReasonPresenter.java: Class file for WO Component 'ReasonPresenter'

/*
 * Copyright (c) 2008, Gennady & Michael Kushnir
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 * 
 * 	•	Redistributions of source code must retain the above copyright notice, this
 * 		list of conditions and the following disclaimer.
 * 	•	Redistributions in binary form must reproduce the above copyright notice,
 * 		this list of conditions and the following disclaimer in the documentation
 * 		and/or other materials provided with the distribution.
 * 	•	Neither the name of the RUJEL nor the names of its contributors may be used
 * 		to endorse or promote products derived from this software without specific 
 * 		prior written permission.
 * 		
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
 * SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
 * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
 * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
 * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

package net.rujel.curriculum;

import com.webobjects.appserver.*;

// Generated by the WOLips Templateengine Plug-in at Mar 21, 2009 10:54:12 PM
public class ReasonPresenter extends com.webobjects.appserver.WOComponent {
    public ReasonPresenter(WOContext context) {
        super(context);
    }
    
    Reason _reason;
    public Reason reason() {
    	if(_reason == null)
    		_reason = (Reason)valueForBinding("reason");
    	return _reason;
    }
    
    public String iconName() {
    	if(reason().namedFlags().flagForKey("forTeacher"))
    		return "teacher.png";
    	if(reason().namedFlags().flagForKey("forEduGroup"))
    		return "group.png";
    	return "school.png";
    }
    
	public String iconTile() {
		String result = reason().extToString();
		if(result == null)
			result = (String)application().valueForKeyPath(
					"strings.RujelCurriculum_Curriculum.Reason.wholeSchool");
		return result;
	}
    
	public boolean isStateless() {
		return true;
	}
	
	public boolean synchronizesVariablesWithBindings() {
        return false;
	}

	public void reset() {
		_reason = null;
		super.reset();
	}

}