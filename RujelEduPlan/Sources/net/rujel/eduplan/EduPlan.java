// EduPlan.java: Class file for WO Component 'EduPlan'

/*
 * Copyright (c) 2008, Gennady & Michael Kushnir
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 * 
 * 	•	Redistributions of source code must retain the above copyright notice, this
 * 		list of conditions and the following disclaimer.
 * 	•	Redistributions in binary form must reproduce the above copyright notice,
 * 		this list of conditions and the following disclaimer in the documentation
 * 		and/or other materials provided with the distribution.
 * 	•	Neither the name of the RUJEL nor the names of its contributors may be used
 * 		to endorse or promote products derived from this software without specific 
 * 		prior written permission.
 * 		
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
 * SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
 * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
 * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
 * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

package net.rujel.eduplan;

import java.util.logging.Logger;

import net.rujel.reusables.PlistReader;
import net.rujel.reusables.SessionedEditingContext;

import com.webobjects.appserver.*;
import com.webobjects.eocontrol.EOEditingContext;
import com.webobjects.eocontrol.EOSortOrdering;
import com.webobjects.foundation.NSArray;
import com.webobjects.foundation.NSKeyValueCoding;

// Generated by the WOLips Templateengine Plug-in at Jul 21, 2009 3:24:54 PM
public class EduPlan extends com.webobjects.appserver.WOComponent {
	
	public static Logger logger = Logger.getLogger("rujel.eduplan");

	public NSArray tablist;
	public NSKeyValueCoding currTab;
	public EOEditingContext ec;
//	public WOComponent toReset;
	public Boolean shouldReset;
		
    public EduPlan(WOContext context) {
        super(context);
        ec = new SessionedEditingContext(context.session());
        tablist = (NSArray)session().valueForKeyPath("modules.planTabs");
        currTab = (NSKeyValueCoding)tablist.objectAtIndex(0);
    }
    
    public String title() {
    	String title = (String)valueForKeyPath("currTab.titie");
    	if(title == null)
    		title = (String)session().valueForKeyPath(
    				"strings.RujelEduPlan_EduPlan.EduPlan");
    	if(title == null)
    		title = "Edu plan";
    	return title;
    }

    public WOActionResults revertEc() {
		ec.lock();
		try {
/*			if(toReset != null) {
				toReset.reset();
				String tmp = toReset.name();
				if(!tmp.endsWith((String)currTab.valueForKey("component")))
					toReset = null;
			}*/
			if(ec.hasChanges())
				ec.revert();
			shouldReset = Boolean.TRUE;
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			ec.unlock();
		}
		return this;
    }
    
	public static Object init(Object obj, WOContext ctx) {
		if(obj == null || obj.equals("init")) {
			//init();
			try {
				Object access = PlistReader.readPlist("access.plist", "RujelEduPlan", null);
				WOApplication.application().takeValueForKey(access, "defaultAccess");
			} catch (NSKeyValueCoding.UnknownKeyException e) {
				// default access not supported
			}
			EOSortOrdering.ComparisonSupport.setSupportForClass(
					new SubjectComparator.ComparisonSupport(), Subject.class);
			EOSortOrdering.ComparisonSupport.setSupportForClass(
					new PlanCycle.ComparisonSupport(), PlanCycle.class);
		} else if(obj.equals("regimes")) {
//			if(Various.boolForObject(ctx.session().valueForKeyPath("readAccess._read.EduPlan")))
//				return null;
			return WOApplication.application().valueForKeyPath(
					"strings.RujelEduPlan_EduPlan.planRegime");
		} else if("planTabs".equals(obj)) {
			return WOApplication.application().valueForKeyPath(
				"strings.RujelEduPlan_EduPlan.planTabs");
		} else if("lessonTabs".equals(obj)) {
			return EduPeriod.lessonTabs(ctx);
		} else if("periods".equals(obj)) {
			return EduPeriod.periods(ctx);
		} else if("settingQualifiers".equals(obj)) {
			Object result = WOApplication.application().valueForKeyPath(
				"strings.RujelEduPlan_EduPlan.settingQualifiers");
			return result;
		}
		return null;
	}
}