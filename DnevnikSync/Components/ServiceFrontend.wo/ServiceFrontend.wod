PageWrapper : PageWrapper {
  title = "SOAP testing";
  action = download;
  onLoad = onLoad;
}

PGrName : WOString {
  value = pgr.name;
}

PeriodGroups : WORepetition {
  list = perGroups;
  item = pgr;
}

Periods : WOString {
  value = periods;
  escapeHTML = false;
}

SyncPeriods : OnClickContainer {
  elementName = "span";
  onclick = session.tryLoad;
  invokeAction = syncPeriods;
  class = "button";
}

SyncTimeTable : OnClickContainer {
  elementName = "span";
  onclick = session.tryLoad;
  invokeAction = syncTimetable;
  class = "button";
}

Events : WORepetition {
  list = events;
  item = item;
}

EventDiv : OnClickContainer {
  elementName = "tr";
  onclick = session.tryLoad;
  invokeAction = dateFromEvent;
}

EventTime : WOString {
  value = item.execTime;
  dateformat = "%d.%m.%Y %H:%M:%S";
}

System : WOString {
  value = item.extBase.baseID;
  valueWhenEmpty = item.extSystem.productName;
}

Entity : WOString {
  value = item.syncEntity;
}

SyncForm : WOForm {
  style = "margin:1ex auto;padding:1ex;border: 1px dashed #999999;display:inline-block;"; 
}

Since : WOTextField {
  value = since;
  dateformat = "%d.%m.%Y %H:%M:%S";
  size = "20";
}

To : WOTextField {
  value = to;
  dateformat = "%d.%m.%Y %H:%M:%S";
  size = "20";
}

SyncMarks : WOSubmitButton {
  action = syncMarks;
  value = "Синхронизировать";
  onclick = "return ajaxPost(this);";
}

SyncGroups : OnClickContainer {
  elementName = "span";
  onclick = session.tryLoad;
  invokeAction = syncGroups;
  class = "button";
}

Errors : WORepetition {
  list = errors;
  item = item;
}

ErrorID : WOString {
  value = item.archID;
}

ErrMethod : WOString {
  value = item.method;
}

Error : WOString {
  value = item.exception.message;
}

ServiceWorks : WOConditional {
  condition = soap;
}

NoService : WOConditional {
  condition = soap;
  negate = true;
}

ErrorMessage : WOString {
  value = item;
}

ClassListing1: ClassListing {
	selection = active;
	width = "100%";
	selectAction = select;
	editingContext = ec;
	onClick = session.checkRun;
	showTitle = true;
}

Tabs : Tabs {
  currTab = active;
  tablist = session.strings.DnevnikSync_Dnevnik.tabs;
  vertical = true;
  selectAction = select;
  onClick = session.checkRun;
}

IsPeriods : WOKeyValueConditional {
  key = "active";
  value = "Периоды";
}

IfMarks : WOKeyValueConditional {
  key = "active";
  value = "Оценки";
}

HasSections : WOConditional {
  condition = session.strings.sections.hasSections;
}

CurrSection : WOString {
  value = session.state.section.value;
}

SectionTabs : Tabs {
  idAttribute = "idx";
  currTab = session.state.section;
  tablist = session.strings.sections.list;
  titleAttribute = "value";
  vertical = true;
  onClick = session.tryLoad;
  selectAction = clear;
}

IfGroup : WOConditional {
  condition = isGroup;
}

GroupList : PersonSelector {
  list = events;
  item = item;
  nameWidth = "16em";
}

ActiveFlag : WOCheckBox {
  checked = studentActive;
  onclick = "parentNode.getElementsByTagName('input')[1].style.visibility = (checked)?'':'hidden';checkChanges(this);";
  name = "cb";
}

Contacts : WORepetition {
  list = contacts;
  item =  item2;
}
Contact : WOTextField {
  value = item2.contact;
  style = fieldStyle;
  onchange = "checkChanges(this);";
}

SetupForm : WOForm {
}

Save : WOSubmitButton {
  action = saveContacts;
  value = session.strings.Reusables_Strings.uiElements.Save;
}

NoSelection : WOConditional {
  condition = active;
  negate = true;
}

Ticker : Ticker {
  align = "right";
}

CanSeeContacts : WOConditional {
  condition = session.readAccess.read.Contact;
}

CanSelect : WOConditional {
  condition = sendAll;
  negate = true;
}

AutoSync : WOConditional {
  condition = syncTime;
}

SyncTime : WOString {
  value = syncTime;
}

NoTab : OnClickContainer {
  elementName = "div";
  class = noTabClass;
  invokeAction = clear;
}

ExportForm : WOForm {
}

ShowUntagged : WORadioButton {
  name = "untagged";
  selection = unticked;
  value = 0;
}

HideUntagged : WORadioButton {
  name = "untagged";
  selection = unticked;
  value = 1;
}

RenameUntagged : WORadioButton {
  name = "untagged";
  selection = unticked;
  value = 2;
}

Export : WOSubmitButton {
  action = export;
  value = "Получить файл";
  onclick = "return ajaxPost(form);";
}
